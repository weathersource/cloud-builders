# In this directory, run the following command to build this builder.
# $ gcloud builds submit . --config=cloudbuild.yaml

steps:
  # Build the debian versions.
  - id: build_debian
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "--tag=gcr.io/$PROJECT_ID/go-gdal:debian", "."]

  # The debian version is our default.
  - id: debian_default
    name: "gcr.io/cloud-builders/docker"
    args: ["tag", "gcr.io/$PROJECT_ID/go-gdal:debian", "gcr.io/$PROJECT_ID/go"]

  # log the golang version
  - id: go_version
    name: "gcr.io/$PROJECT_ID/go"
    args: ["version"]
    env: ["GOPATH=."]

  # Ensure that "go get" works
  - id: test_go_get
    name: "gcr.io/$PROJECT_ID/go"
    args: ["get", "golang.org/x/net/context"]
    env: ["GOPATH=/tmp"]

  # Test the examples.

  # examples/hello_world
  - id: hello_test
    name: "gcr.io/$PROJECT_ID/go"
    args: ["test", "hello"]
    env: ["PROJECT_ROOT=hello"]
    dir: "examples/hello_world"
  - id: hello_install
    name: "gcr.io/$PROJECT_ID/go"
    args: ["install", "."]
    env: ["PROJECT_ROOT=hello"]
    dir: "examples/hello_world"
  - id: hello_build
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "."]
    dir: "examples/hello_world"

  # examples/whole_workspace
  - id: whole_workspace_test
    name: "gcr.io/$PROJECT_ID/go"
    args: ["test", "hello"]
    env: ["GOPATH=."]
    dir: "examples/whole_workspace"
  - id: whole_workspace_install
    name: "gcr.io/$PROJECT_ID/go"
    args: ["install", "hello"]
    env: ["GOPATH=."]
    dir: "examples/whole_workspace"
  - id: whole_workspace_build
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "."]
    dir: "examples/whole_workspace"

  # examples/whole_workspace with an absolute path
  - id: absolute_path_test
    name: "gcr.io/$PROJECT_ID/go"
    args: ["test", "hello"]
    env: ["GOPATH=/workspace/examples/whole_workspace"]
    dir: "examples/whole_workspace"
  - id: absolute_path_install
    name: "gcr.io/$PROJECT_ID/go"
    args: ["install", "hello"]
    env: ["GOPATH=/workspace/examples/whole_workspace"]
    dir: "examples/whole_workspace"
  - id: absolute_path_build
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "."]
    dir: "examples/whole_workspace"

  # examples/import_workspace
  - id: import_workspace_test
    name: "gcr.io/$PROJECT_ID/go"
    args: ["test", "hello"]
    dir: "examples/import_workspace"
  - id: import_workspace_build
    name: "gcr.io/$PROJECT_ID/go"
    args: ["build", "hello"]
    dir: "examples/import_workspace"
  - id: import_workspace_install
    name: "gcr.io/$PROJECT_ID/go"
    args: ["install", "hello"]
    dir: "examples/import_workspace"
  - id: import_workspace_build2
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "."]
    dir: "examples/import_workspace"

  # examples/nested_workspace
  - id: nested_workspace_test
    name: "gcr.io/$PROJECT_ID/go"
    args: ["test", "hello"]
    env: ["GOPATH=subproject"]
    dir: "examples/nested_workspace"
  - id: nested_workspace_install
    name: "gcr.io/$PROJECT_ID/go"
    args: ["install", "hello"]
    env: ["GOPATH=subproject"]
    dir: "examples/nested_workspace"
  - id: nested_workspace_build
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "."]
    dir: "examples/nested_workspace"

  # examples/https_test
  # with debian
  - id: https_debian_install
    name: "gcr.io/$PROJECT_ID/go:debian"
    args: ["install", "https_test"]
    dir: "examples/https_test"
  - id: https_debian_build
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "--tag=https_test:debian", "."]
    dir: "examples/https_test"
  - id: https_debian_run
    name: "gcr.io/cloud-builders/docker"
    args: ["run", "https_test:debian"]

images:
  - "gcr.io/$PROJECT_ID/go-gdal"
  - "gcr.io/$PROJECT_ID/go-gdal:debian"
